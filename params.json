{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Cassanity","tagline":"CASSANITY NOW!","body":"# Cassanity\r\n\r\nLayer of goodness on top of cassandra-cql so you do not have to write CQL strings all over the place.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'cassanity'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install cassanity\r\n\r\n## Usage\r\n\r\n```ruby\r\nrequire 'cassanity'\r\n\r\n# client does the heavy lifting of setting up a cassandra cql database instance,\r\n# a cassanity executor for that database, and a cassanity connection\r\nclient = Cassanity::Client.new\r\n\r\n# get keyspace instance\r\nkeyspace = client[:my_app]\r\n\r\n# tell client to use keyspace for future queries\r\n# this is optional as cassanity always sends the keyspace and column family name\r\n# whenever they are needed\r\nkeyspace.use\r\n\r\n# schema for apps column family\r\napps_schema = Cassanity::Schema.new({\r\n  primary_key: :id,\r\n  columns: {\r\n    id: :text,\r\n    name: :text,\r\n    created_at: :timestamp,\r\n  },\r\n  with: {\r\n    comment: 'For storing apps',\r\n  }\r\n})\r\n\r\n# get instance of column family with name and schema set\r\napps = keyspace.column_family({\r\n  name: :apps,\r\n  schema: apps_schema,\r\n})\r\n\r\n# you can also just pass a hash for the schema\r\napps = keyspace.column_family({\r\n  name: :apps,\r\n  schema: {\r\n    primary_key: :id,\r\n    columns: {\r\n      id: :text,\r\n      name: :text,\r\n      created_at: :timestamp,\r\n    },\r\n    with: {\r\n      comment: 'For storing apps',\r\n    }\r\n  },\r\n})\r\n\r\n# create column family based on name and schema\r\napps.create\r\n\r\n# insert row\r\napps.insert(data: {\r\n  id: '1',\r\n  name: 'GitHub.com',\r\n  created_at: Time.now,\r\n})\r\n\r\n# update name for row\r\napps.update(set: {name: 'GitHub'}, where: {id: '1'})\r\n\r\n# delete row\r\napps.delete(where: {id: '1'})\r\n\r\n# truncate column family (remove all rows, still can add new stuff)\r\napps.truncate\r\n\r\n# drop column family (no more inserting into it, it is gone)\r\napps.drop\r\n```\r\n\r\nYou can also do a lot more. Here are a few more [examples](https://github.com/jnunemaker/cassanity/tree/master/examples):\r\n\r\n* [Batch Operations](https://github.com/jnunemaker/cassanity/tree/master/examples/batch.rb)\r\n* [Counters](https://github.com/jnunemaker/cassanity/tree/master/examples/counters.rb)\r\n* [Keyspaces](https://github.com/jnunemaker/cassanity/tree/master/examples/keyspaces.rb)\r\n* [Column Families](https://github.com/jnunemaker/cassanity/tree/master/examples/column_families.rb)\r\n* [Select a Range](https://github.com/jnunemaker/cassanity/tree/master/examples/select_range.rb)\r\n\r\n## Instrumentation\r\n\r\nCassanity comes with a log subscriber and automatic metriks instrumentation. By\r\ndefault these work with ActiveSupport::Notifications, but only require the\r\npieces of ActiveSupport that are needed and only do so if you actually attempt\r\nto require the instrumentation files listed below.\r\n\r\nIf you use any of this instrumentation, you will need to have activesupport in\r\nyour Gemfile.\r\n\r\nTo use the log subscriber:\r\n\r\n```ruby\r\nrequire 'cassanity/instrumentation/log_subscriber'\r\n```\r\n\r\nTo use the metriks instrumentation:\r\n\r\n```ruby\r\nrequire 'cassanity/instrumentation/metriks'\r\n```\r\n\r\nFor Rails, I typically drop these lines in an initialize named `cassanity.rb`.\r\n\r\n## Compatibility\r\n\r\n* Ruby 1.9.3\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":""}